# Simple Azure Pipelines configuration for Playwright TypeScript Framework
# This pipeline runs Playwright tests with basic reporting

trigger:
  branches:
    include:
      - main
      - develop

pr:
  branches:
    include:
      - main
      - develop

# Pipeline variables
variables:
  NODE_VERSION: '20.x'
  CI: 'true'

# Single job pipeline
jobs:
  - job: RunTests
    displayName: 'Run Playwright Tests'
    pool:
      vmImage: 'ubuntu-latest'
    
    steps:
      # Install Node.js
      - task: NodeTool@0
        displayName: 'Install Node.js'
        inputs:
          versionSpec: $(NODE_VERSION)

      # Cache npm packages for faster builds
      - task: Cache@2
        displayName: 'Cache npm packages'
        inputs:
          key: 'npm | "$(Agent.OS)" | package-lock.json'
          restoreKeys: |
            npm | "$(Agent.OS)"
          path: '$(System.DefaultWorkingDirectory)/node_modules'

      # Install dependencies
      - script: |
          npm ci
        displayName: 'Install npm dependencies'

      # Install Playwright browsers
      - script: |
          npx playwright install --with-deps
        displayName: 'Install Playwright browsers'

      # Run Playwright tests
      - script: |
          npx playwright test --config=playwright.service.config.ts
        displayName: 'Run Playwright Tests'
        continueOnError: true

      # Publish test results
      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        condition: always()
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/junit.xml'
          failTaskOnFailedTests: false
          testRunTitle: 'Playwright Tests'

      # Publish HTML report
      - task: PublishPipelineArtifact@1
        displayName: 'Publish HTML Report'
        condition: always()
        inputs:
          targetPath: 'playwright-report'
          artifact: 'playwright-report'
          publishLocation: 'pipeline'

      # Publish screenshots
      - task: PublishPipelineArtifact@1
        displayName: 'Publish Screenshots'
        condition: always()
        inputs:
          targetPath: 'screenshots'
          artifact: 'screenshots'
          publishLocation: 'pipeline'
