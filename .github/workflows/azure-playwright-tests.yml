name: Azure Playwright Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 4 AM UTC
    - cron: '0 4 * * *'
  workflow_dispatch:
    inputs:
      test_tags:
        description: 'Test tags to run'
        required: false
        default: '@smoke|@critical'
      workers:
        description: 'Number of parallel workers'
        required: false
        default: '20'

jobs:
  azure-tests:
    name: 🚀 Run Tests on Azure
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: 🔐 Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: ⚙️ Configure Azure Playwright Testing
        run: |
          echo "PLAYWRIGHT_SERVICE_URL=${{ secrets.PLAYWRIGHT_SERVICE_URL }}" >> $GITHUB_ENV
          echo "PLAYWRIGHT_SERVICE_ACCESS_TOKEN=${{ secrets.PLAYWRIGHT_SERVICE_ACCESS_TOKEN }}" >> $GITHUB_ENV
          
      - name: 🧪 Run tests on Azure
        run: |
          if [ "${{ github.event.inputs.test_tags }}" != "" ]; then
            npx playwright test -c playwright.azure.config.ts --grep "${{ github.event.inputs.test_tags }}" --workers=${{ github.event.inputs.workers || '20' }}
          else
            npm run test:azure:tags
          fi
        env:
          CI: true
          PLAYWRIGHT_SERVICE_URL: ${{ secrets.PLAYWRIGHT_SERVICE_URL }}
          PLAYWRIGHT_SERVICE_ACCESS_TOKEN: ${{ secrets.PLAYWRIGHT_SERVICE_ACCESS_TOKEN }}
          
      - name: 📊 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: azure-playwright-results
          path: |
            playwright-report/
            test-results/
            allure-results/
            screenshots/
          retention-days: 30
          
      - name: 📈 Generate Allure Report
        if: always()
        run: |
          npm install -g allure-commandline
          allure generate allure-results --clean -o allure-report
          
      - name: 📊 Publish Allure Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report-azure
          path: allure-report/
          retention-days: 30
          
      - name: 💬 Post results summary
        if: always()
        run: |
          echo "### 🧪 Azure Playwright Testing Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 Platform: Azure Playwright Testing" >> $GITHUB_STEP_SUMMARY
          echo "- 👥 Workers: ${{ github.event.inputs.workers || '20' }}" >> $GITHUB_STEP_SUMMARY
          echo "- 🏷️ Tags: ${{ github.event.inputs.test_tags || '@smoke|@critical' }}" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 View detailed results in Azure Portal" >> $GITHUB_STEP_SUMMARY
          echo "- 🔗 [Azure Portal](https://portal.azure.com/)" >> $GITHUB_STEP_SUMMARY

